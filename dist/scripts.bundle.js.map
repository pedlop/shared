{"version":3,"sources":["/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/toastr/toastr.js","/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/script-loader/addScript.js","/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/toastr/toastr.js?9d4e"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["module.exports = \"/*\\n * Toastr\\n * Copyright 2012-2015\\n * Authors: John Papa, Hans FjÃ¤llemark, and Tim Ferrell.\\n * All Rights Reserved.\\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\\n *\\n * ARIA Support: Greta Krafsig\\n *\\n * Project: https://github.com/CodeSeven/toastr\\n */\\n/* global define */\\n; (function (define) {\\n    define(['jquery'], function ($) {\\n        return (function () {\\n            var $container;\\n            var listener;\\n            var toastId = 0;\\n            var toastType = {\\n                error: 'error',\\n                info: 'info',\\n                success: 'success',\\n                warning: 'warning'\\n            };\\n\\n            var toastr = {\\n                clear: clear,\\n                remove: remove,\\n                error: error,\\n                getContainer: getContainer,\\n                info: info,\\n                options: {},\\n                subscribe: subscribe,\\n                success: success,\\n                version: '2.1.2',\\n                warning: warning\\n            };\\n\\n            var previousToast;\\n\\n            return toastr;\\n\\n            ////////////////\\n\\n            function error(message, title, optionsOverride) {\\n                return notify({\\n                    type: toastType.error,\\n                    iconClass: getOptions().iconClasses.error,\\n                    message: message,\\n                    optionsOverride: optionsOverride,\\n                    title: title\\n                });\\n            }\\n\\n            function getContainer(options, create) {\\n                if (!options) { options = getOptions(); }\\n                $container = $('#' + options.containerId);\\n                if ($container.length) {\\n                    return $container;\\n                }\\n                if (create) {\\n                    $container = createContainer(options);\\n                }\\n                return $container;\\n            }\\n\\n            function info(message, title, optionsOverride) {\\n                return notify({\\n                    type: toastType.info,\\n                    iconClass: getOptions().iconClasses.info,\\n                    message: message,\\n                    optionsOverride: optionsOverride,\\n                    title: title\\n                });\\n            }\\n\\n            function subscribe(callback) {\\n                listener = callback;\\n            }\\n\\n            function success(message, title, optionsOverride) {\\n                return notify({\\n                    type: toastType.success,\\n                    iconClass: getOptions().iconClasses.success,\\n                    message: message,\\n                    optionsOverride: optionsOverride,\\n                    title: title\\n                });\\n            }\\n\\n            function warning(message, title, optionsOverride) {\\n                return notify({\\n                    type: toastType.warning,\\n                    iconClass: getOptions().iconClasses.warning,\\n                    message: message,\\n                    optionsOverride: optionsOverride,\\n                    title: title\\n                });\\n            }\\n\\n            function clear($toastElement, clearOptions) {\\n                var options = getOptions();\\n                if (!$container) { getContainer(options); }\\n                if (!clearToast($toastElement, options, clearOptions)) {\\n                    clearContainer(options);\\n                }\\n            }\\n\\n            function remove($toastElement) {\\n                var options = getOptions();\\n                if (!$container) { getContainer(options); }\\n                if ($toastElement && $(':focus', $toastElement).length === 0) {\\n                    removeToast($toastElement);\\n                    return;\\n                }\\n                if ($container.children().length) {\\n                    $container.remove();\\n                }\\n            }\\n\\n            // internal functions\\n\\n            function clearContainer (options) {\\n                var toastsToClear = $container.children();\\n                for (var i = toastsToClear.length - 1; i >= 0; i--) {\\n                    clearToast($(toastsToClear[i]), options);\\n                }\\n            }\\n\\n            function clearToast ($toastElement, options, clearOptions) {\\n                var force = clearOptions && clearOptions.force ? clearOptions.force : false;\\n                if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\\n                    $toastElement[options.hideMethod]({\\n                        duration: options.hideDuration,\\n                        easing: options.hideEasing,\\n                        complete: function () { removeToast($toastElement); }\\n                    });\\n                    return true;\\n                }\\n                return false;\\n            }\\n\\n            function createContainer(options) {\\n                $container = $('<div/>')\\n                    .attr('id', options.containerId)\\n                    .addClass(options.positionClass)\\n                    .attr('aria-live', 'polite')\\n                    .attr('role', 'alert');\\n\\n                $container.appendTo($(options.target));\\n                return $container;\\n            }\\n\\n            function getDefaults() {\\n                return {\\n                    tapToDismiss: true,\\n                    toastClass: 'toast',\\n                    containerId: 'toast-container',\\n                    debug: false,\\n\\n                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\\n                    showDuration: 300,\\n                    showEasing: 'swing', //swing and linear are built into jQuery\\n                    onShown: undefined,\\n                    hideMethod: 'fadeOut',\\n                    hideDuration: 1000,\\n                    hideEasing: 'swing',\\n                    onHidden: undefined,\\n                    closeMethod: false,\\n                    closeDuration: false,\\n                    closeEasing: false,\\n\\n                    extendedTimeOut: 1000,\\n                    iconClasses: {\\n                        error: 'toast-error',\\n                        info: 'toast-info',\\n                        success: 'toast-success',\\n                        warning: 'toast-warning'\\n                    },\\n                    iconClass: 'toast-info',\\n                    positionClass: 'toast-top-right',\\n                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\\n                    titleClass: 'toast-title',\\n                    messageClass: 'toast-message',\\n                    escapeHtml: false,\\n                    target: 'body',\\n                    closeHtml: '<button type=\\\"button\\\">&times;</button>',\\n                    newestOnTop: true,\\n                    preventDuplicates: false,\\n                    progressBar: false\\n                };\\n            }\\n\\n            function publish(args) {\\n                if (!listener) { return; }\\n                listener(args);\\n            }\\n\\n            function notify(map) {\\n                var options = getOptions();\\n                var iconClass = map.iconClass || options.iconClass;\\n\\n                if (typeof (map.optionsOverride) !== 'undefined') {\\n                    options = $.extend(options, map.optionsOverride);\\n                    iconClass = map.optionsOverride.iconClass || iconClass;\\n                }\\n\\n                if (shouldExit(options, map)) { return; }\\n\\n                toastId++;\\n\\n                $container = getContainer(options, true);\\n\\n                var intervalId = null;\\n                var $toastElement = $('<div/>');\\n                var $titleElement = $('<div/>');\\n                var $messageElement = $('<div/>');\\n                var $progressElement = $('<div/>');\\n                var $closeElement = $(options.closeHtml);\\n                var progressBar = {\\n                    intervalId: null,\\n                    hideEta: null,\\n                    maxHideTime: null\\n                };\\n                var response = {\\n                    toastId: toastId,\\n                    state: 'visible',\\n                    startTime: new Date(),\\n                    options: options,\\n                    map: map\\n                };\\n\\n                personalizeToast();\\n\\n                displayToast();\\n\\n                handleEvents();\\n\\n                publish(response);\\n\\n                if (options.debug && console) {\\n                    console.log(response);\\n                }\\n\\n                return $toastElement;\\n\\n                function escapeHtml(source) {\\n                    if (source == null)\\n                        source = \\\"\\\";\\n\\n                    return new String(source)\\n                        .replace(/&/g, '&amp;')\\n                        .replace(/\\\"/g, '&quot;')\\n                        .replace(/'/g, '&#39;')\\n                        .replace(/</g, '&lt;')\\n                        .replace(/>/g, '&gt;');\\n                }\\n\\n                function personalizeToast() {\\n                    setIcon();\\n                    setTitle();\\n                    setMessage();\\n                    setCloseButton();\\n                    setProgressBar();\\n                    setSequence();\\n                }\\n\\n                function handleEvents() {\\n                    $toastElement.hover(stickAround, delayedHideToast);\\n                    if (!options.onclick && options.tapToDismiss) {\\n                        $toastElement.click(hideToast);\\n                    }\\n\\n                    if (options.closeButton && $closeElement) {\\n                        $closeElement.click(function (event) {\\n                            if (event.stopPropagation) {\\n                                event.stopPropagation();\\n                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\\n                                event.cancelBubble = true;\\n                            }\\n                            hideToast(true);\\n                        });\\n                    }\\n\\n                    if (options.onclick) {\\n                        $toastElement.click(function (event) {\\n                            options.onclick(event);\\n                            hideToast();\\n                        });\\n                    }\\n                }\\n\\n                function displayToast() {\\n                    $toastElement.hide();\\n\\n                    $toastElement[options.showMethod](\\n                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}\\n                    );\\n\\n                    if (options.timeOut > 0) {\\n                        intervalId = setTimeout(hideToast, options.timeOut);\\n                        progressBar.maxHideTime = parseFloat(options.timeOut);\\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\\n                        if (options.progressBar) {\\n                            progressBar.intervalId = setInterval(updateProgress, 10);\\n                        }\\n                    }\\n                }\\n\\n                function setIcon() {\\n                    if (map.iconClass) {\\n                        $toastElement.addClass(options.toastClass).addClass(iconClass);\\n                    }\\n                }\\n\\n                function setSequence() {\\n                    if (options.newestOnTop) {\\n                        $container.prepend($toastElement);\\n                    } else {\\n                        $container.append($toastElement);\\n                    }\\n                }\\n\\n                function setTitle() {\\n                    if (map.title) {\\n                        $titleElement.append(!options.escapeHtml ? map.title : escapeHtml(map.title)).addClass(options.titleClass);\\n                        $toastElement.append($titleElement);\\n                    }\\n                }\\n\\n                function setMessage() {\\n                    if (map.message) {\\n                        $messageElement.append(!options.escapeHtml ? map.message : escapeHtml(map.message)).addClass(options.messageClass);\\n                        $toastElement.append($messageElement);\\n                    }\\n                }\\n\\n                function setCloseButton() {\\n                    if (options.closeButton) {\\n                        $closeElement.addClass('toast-close-button').attr('role', 'button');\\n                        $toastElement.prepend($closeElement);\\n                    }\\n                }\\n\\n                function setProgressBar() {\\n                    if (options.progressBar) {\\n                        $progressElement.addClass('toast-progress');\\n                        $toastElement.prepend($progressElement);\\n                    }\\n                }\\n\\n                function shouldExit(options, map) {\\n                    if (options.preventDuplicates) {\\n                        if (map.message === previousToast) {\\n                            return true;\\n                        } else {\\n                            previousToast = map.message;\\n                        }\\n                    }\\n                    return false;\\n                }\\n\\n                function hideToast(override) {\\n                    var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\\n                    var duration = override && options.closeDuration !== false ?\\n                        options.closeDuration : options.hideDuration;\\n                    var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\\n                    if ($(':focus', $toastElement).length && !override) {\\n                        return;\\n                    }\\n                    clearTimeout(progressBar.intervalId);\\n                    return $toastElement[method]({\\n                        duration: duration,\\n                        easing: easing,\\n                        complete: function () {\\n                            removeToast($toastElement);\\n                            if (options.onHidden && response.state !== 'hidden') {\\n                                options.onHidden();\\n                            }\\n                            response.state = 'hidden';\\n                            response.endTime = new Date();\\n                            publish(response);\\n                        }\\n                    });\\n                }\\n\\n                function delayedHideToast() {\\n                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {\\n                        intervalId = setTimeout(hideToast, options.extendedTimeOut);\\n                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\\n                    }\\n                }\\n\\n                function stickAround() {\\n                    clearTimeout(intervalId);\\n                    progressBar.hideEta = 0;\\n                    $toastElement.stop(true, true)[options.showMethod](\\n                        {duration: options.showDuration, easing: options.showEasing}\\n                    );\\n                }\\n\\n                function updateProgress() {\\n                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\\n                    $progressElement.width(percentage + '%');\\n                }\\n            }\\n\\n            function getOptions() {\\n                return $.extend({}, getDefaults(), toastr.options);\\n            }\\n\\n            function removeToast($toastElement) {\\n                if (!$container) { $container = getContainer(); }\\n                if ($toastElement.is(':visible')) {\\n                    return;\\n                }\\n                $toastElement.remove();\\n                $toastElement = null;\\n                if ($container.children().length === 0) {\\n                    $container.remove();\\n                    previousToast = undefined;\\n                }\\n            }\\n\\n        })();\\n    });\\n}(typeof define === 'function' && define.amd ? define : function (deps, factory) {\\n    if (typeof module !== 'undefined' && module.exports) { //Node\\n        module.exports = factory(require('jquery'));\\n    } else {\\n        window.toastr = factory(window.jQuery);\\n    }\\n}));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/raw-loader!/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/toastr/toastr.js\n// module id = ../../../../raw-loader/index.js!../../../../toastr/toastr.js\n// module chunks = 3","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/script-loader/addScript.js\n// module id = ../../../../script-loader/addScript.js\n// module chunks = 3","require(\"!!/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/node_modules/script-loader/addScript.js\")(require(\"!!/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/node_modules/raw-loader/index.js!/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/node_modules/toastr/toastr.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/script-loader!/Users/Pedro/Documents/Pedro/ufg-project-structure/portal-inf/~/toastr/toastr.js\n// module id = ../../../../script-loader/index.js!../../../../toastr/toastr.js\n// module chunks = 3"],"sourceRoot":"webpack:///"}